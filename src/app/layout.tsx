import type { Metadata } from "next";
import "./globals.css";
import { useState} from "react";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};


type BankStatus = "ESTÁVEL" | "LENTO" | "ERRO";

interface Bank {
  name: string;
  status: BankStatus;
}

interface ErrorLog {
  timestamp: string;
  message: string;
}

const banks: Bank[] = [
  { name: "Banco do Brasil", status: "ESTÁVEL" },
  { name: "Itaú", status: "LENTO" },
  { name: "Sicoob", status: "ERRO" },
  { name: "Sicredi", status: "ESTÁVEL" },
  { name: "Caixa", status: "LENTO" },
  { name: "Santander", status: "ERRO" },
  { name: "Banrisul", status: "ESTÁVEL" },
  { name: "Inter", status: "LENTO" },
];

export default function Home() {
  const [selectedBank, setSelectedBank] = useState<string | null>(null);
  const [errorLogs, setErrorLogs] = useState<ErrorLog[]>([]);
  const [timeFilter, setTimeFilter] = useState("24h");

  useEffect(() => {
    
   if (selectedBank) {
      const fetchErrors = async () => {
        const response = await fetch(`/api/errors?bank=${selectedBank}`);
        const data = await response.json();
        setErrorLogs(data);
      };
      fetchErrors();
   } else {
     setErrorLogs([]);
   }
  }, [selectedBank]);

  return (
    <div className="bg-gray-900 text-white min-h-screen p-6">
      <header className="flex justify-between items-center pb-6">
        <h1 className="text-2xl font-bold">Monitorador Bancário</h1>
      </header>

      <section className="mb-6">
        <h2 className="text-lg font-semibold mb-2">Selecione o Banco</h2>
        <div className="flex flex-wrap gap-4">
          {banks.map((bank) => (
            <button
              key={bank.name}
              className={`p-4 border rounded-lg ${
                selectedBank === bank.name ? "border-blue-500" : "border-gray-700"
              }`}
              onClick={() => setSelectedBank(bank.name)}
            >
              <div className="font-bold text-center">{bank.name}</div>
              <div
                className={`mt-2 text-sm font-semibold ${
                  bank.status === "ESTÁVEL"
                    ? "text-green-500"
                    : bank.status === "LENTO"
                    ? "text-yellow-500"
                    : "text-red-500"
                }`}
              >
                {bank.status}
              </div>
            </button>
          ))}
        </div>
      </section>

      <section className="mb-6">
        <h2 className="text-lg font-semibold mb-2">Gráfico de Status</h2>
        <div className="h-48 bg-gray-800 rounded-lg flex justify-center items-center">
          {/* Gráfico aqui (use Chart.js ou outra biblioteca) */}
          <span className="text-gray-500">Gráfico em desenvolvimento...</span>
        </div>
      </section>

      <section className="mb-6">
        <h2 className="text-lg font-semibold mb-2">Histórico de Erros</h2>
        {errorLogs.length > 0 ? (
          <table className="w-full text-left border-collapse">
            <thead>
              <tr>
                <th className="border-b p-2">Data</th>
                <th className="border-b p-2">Erro</th>
              </tr>
            </thead>
            <tbody>
              {errorLogs.map((log, index) => (
                <tr key={index}>
                  <td className="border-b p-2">{log.timestamp}</td>
                  <td className="border-b p-2">{log.message}</td>
                </tr>
              ))}
            </tbody>
          </table>
        ) : (
          <p className="text-gray-400">Nenhum erro registrado.</p>
        )}
      </section>
    </div>
  );
}
